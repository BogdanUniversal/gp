{
    "name": "Addition",
    "attributes": {
        "type": "function",
        "arity": 2,
        "doc": "(function) def add(arg0: float, arg1: float) -> float\nSame as a + b.",
        "returnType": "float"
    },
    "children": [
        {
            "name": "Protected Division",
            "attributes": {
                "type": "function",
                "arity": 2,
                "doc": "(function) def protected_div(arg0: float, arg1: float) -> float\nSafely performs division between two numbers.\n    Divides `left` by `right` and returns the result. If a division by zero occurs,\n    returns 1 instead of raising an exception.\n    Args:\n        left (Primitive): The numerator.\n        right (Primitive): The denominator.\n    Returns:\n        Primitive: The result of the division, or 1 if `right` is zero.",
                "returnType": "float"
            },
            "children": [
                {
                    "name": "Random Poisson (2 Lam)",
                    "attributes": {
                        "type": "constant",
                        "arity": 0,
                        "returnType": "float",
                        "doc": "partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n",
                        "value": 5
                    },
                    "children": []
                },
                {
                    "name": "Substraction",
                    "attributes": {
                        "type": "function",
                        "arity": 2,
                        "doc": "(function) def sub(arg0: float, arg1: float) -> float\nSame as a - b.",
                        "returnType": "float"
                    },
                    "children": [
                        {
                            "name": "Multiplication",
                            "attributes": {
                                "type": "function",
                                "arity": 2,
                                "doc": "(function) def mul(arg0: float, arg1: float) -> float\nSame as a * b.",
                                "returnType": "float"
                            },
                            "children": [
                                {
                                    "name": "IN3"
                                },
                                {
                                    "name": "Addition",
                                    "attributes": {
                                        "type": "function",
                                        "arity": 2,
                                        "doc": "(function) def add(arg0: float, arg1: float) -> float\nSame as a + b.",
                                        "returnType": "float"
                                    },
                                    "children": [
                                        {
                                            "name": "Random Wald (1 Mean)",
                                            "attributes": {
                                                "type": "constant",
                                                "arity": 0,
                                                "returnType": "float",
                                                "doc": "partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n",
                                                "value": 0.676988146241441
                                            },
                                            "children": []
                                        },
                                        {
                                            "name": "<deap.gp.Terminal object at 0x000001648880B540>"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "If Then Else",
                            "attributes": {
                                "type": "function",
                                "arity": 3,
                                "doc": "(function) def if_then_else(arg0: bool, arg1: float, arg2: float) -> float\nReturns one of two outputs based on the truth value of the input.\n    Args:\n        input (bool): Condition to evaluate. If True, output1 is returned; otherwise, output2 is returned.\n        output1 (Primitive): Value to return if input is True.\n        output2 (Primitive): Value to return if input is False.\n    Returns:\n        Any: output1 if input is True, otherwise output2.",
                                "returnType": "float"
                            },
                            "children": [
                                {
                                    "name": "<deap.gp.Terminal object at 0x000001648880A980>"
                                },
                                {
                                    "name": "IN2"
                                },
                                {
                                    "name": "<deap.gp.Terminal object at 0x000001648880B540>"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Protected Division",
            "attributes": {
                "type": "function",
                "arity": 2,
                "doc": "(function) def protected_div(arg0: float, arg1: float) -> float\nSafely performs division between two numbers.\n    Divides `left` by `right` and returns the result. If a division by zero occurs,\n    returns 1 instead of raising an exception.\n    Args:\n        left (Primitive): The numerator.\n        right (Primitive): The denominator.\n    Returns:\n        Primitive: The result of the division, or 1 if `right` is zero.",
                "returnType": "float"
            },
            "children": [
                {
                    "name": "Protected Division",
                    "attributes": {
                        "type": "function",
                        "arity": 2,
                        "doc": "(function) def protected_div(arg0: float, arg1: float) -> float\nSafely performs division between two numbers.\n    Divides `left` by `right` and returns the result. If a division by zero occurs,\n    returns 1 instead of raising an exception.\n    Args:\n        left (Primitive): The numerator.\n        right (Primitive): The denominator.\n    Returns:\n        Primitive: The result of the division, or 1 if `right` is zero.",
                        "returnType": "float"
                    },
                    "children": [
                        {
                            "name": "Random Poisson (2 Lam)",
                            "attributes": {
                                "type": "constant",
                                "arity": 0,
                                "returnType": "float",
                                "doc": "partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n",
                                "value": 5
                            },
                            "children": []
                        },
                        {
                            "name": "Substraction",
                            "attributes": {
                                "type": "function",
                                "arity": 2,
                                "doc": "(function) def sub(arg0: float, arg1: float) -> float\nSame as a - b.",
                                "returnType": "float"
                            },
                            "children": [
                                {
                                    "name": "Random Uniform (-1 - 1)",
                                    "attributes": {
                                        "type": "constant",
                                        "arity": 0,
                                        "returnType": "float",
                                        "doc": "partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n",
                                        "value": -0.39561403131098616
                                    },
                                    "children": []
                                },
                                {
                                    "name": "<deap.gp.Terminal object at 0x000001648880B540>"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Substraction",
                    "attributes": {
                        "type": "function",
                        "arity": 2,
                        "doc": "(function) def sub(arg0: float, arg1: float) -> float\nSame as a - b.",
                        "returnType": "float"
                    },
                    "children": [
                        {
                            "name": "IN4"
                        },
                        {
                            "name": "If Then Else",
                            "attributes": {
                                "type": "function",
                                "arity": 3,
                                "doc": "(function) def if_then_else(arg0: bool, arg1: float, arg2: float) -> float\nReturns one of two outputs based on the truth value of the input.\n    Args:\n        input (bool): Condition to evaluate. If True, output1 is returned; otherwise, output2 is returned.\n        output1 (Primitive): Value to return if input is True.\n        output2 (Primitive): Value to return if input is False.\n    Returns:\n        Any: output1 if input is True, otherwise output2.",
                                "returnType": "float"
                            },
                            "children": [
                                {
                                    "name": "Lower Than",
                                    "attributes": {
                                        "type": "function",
                                        "arity": 2,
                                        "doc": "(function) def lt(arg0: float, arg1: float) -> bool\nSame as a < b.",
                                        "returnType": "bool"
                                    },
                                    "children": [
                                        {
                                            "name": "Substraction",
                                            "attributes": {
                                                "type": "function",
                                                "arity": 2,
                                                "doc": "(function) def sub(arg0: float, arg1: float) -> float\nSame as a - b.",
                                                "returnType": "float"
                                            },
                                            "children": [
                                                {
                                                    "name": "Addition",
                                                    "attributes": {
                                                        "type": "function",
                                                        "arity": 2,
                                                        "doc": "(function) def add(arg0: float, arg1: float) -> float\nSame as a + b.",
                                                        "returnType": "float"
                                                    },
                                                    "children": [
                                                        {
                                                            "name": "IN1"
                                                        },
                                                        {
                                                            "name": "Random Wald (1 Mean)",
                                                            "attributes": {
                                                                "type": "constant",
                                                                "arity": 0,
                                                                "returnType": "float",
                                                                "doc": "partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n",
                                                                "value": 2.1997736023216032
                                                            },
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "IN4"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "<deap.gp.Terminal object at 0x000001648880B540>"
                                        }
                                    ]
                                },
                                {
                                    "name": "IN4"
                                },
                                {
                                    "name": "Substraction",
                                    "attributes": {
                                        "type": "function",
                                        "arity": 2,
                                        "doc": "(function) def sub(arg0: float, arg1: float) -> float\nSame as a - b.",
                                        "returnType": "float"
                                    },
                                    "children": [
                                        {
                                            "name": "IN1"
                                        },
                                        {
                                            "name": "<deap.gp.Terminal object at 0x0000016488809000>"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}